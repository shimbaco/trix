{"version":3,"file":"trix.umd.min.js","sources":["../src/trix/config/attachments.js","../src/trix/config/block_attributes.js","../src/trix/config/browser.js","../src/trix/config/lang.js","../src/trix/config/file_size_formatting.js","../src/trix/constants.js","../src/trix/core/helpers/extend.js","../src/trix/core/helpers/dom.js","../src/trix/config/input.js","../src/trix/config/key_names.js","../src/trix/config/text_attributes.js","../src/trix/config/toolbar.js","../src/trix/config/undo.js","../src/trix/config/css.js","../src/trix/core/basic_object.js","../src/trix/core/utilities/utf16_string.js","../src/trix/core/object.js","../src/trix/core/helpers/arrays.js","../src/trix/core/helpers/bidi.js","../src/trix/core/helpers/config.js","../src/trix/core/helpers/custom_elements.js","../src/trix/core/helpers/events.js","../src/trix/core/helpers/functions.js","../src/trix/core/helpers/objects.js","../src/trix/core/helpers/ranges.js","../src/trix/observers/selection_change_observer.js","../src/trix/core/helpers/strings.js","../src/trix/core/collections/hash.js","../src/trix/core/collections/object_group.js","../src/trix/core/collections/object_map.js","../src/trix/core/collections/element_store.js","../src/trix/core/utilities/operation.js","../src/trix/views/object_view.js","../src/trix/views/attachment_view.js","../src/trix/views/previewable_attachment_view.js","../src/trix/views/piece_view.js","../src/trix/views/text_view.js","../src/trix/views/block_view.js","../src/trix/views/document_view.js","../src/trix/models/piece.js","../src/trix/operations/image_preload_operation.js","../src/trix/models/attachment.js","../src/trix/models/attachment_piece.js","../src/trix/models/string_piece.js","../src/trix/models/splittable_list.js","../src/trix/models/text.js","../src/trix/models/block.js","../src/trix/models/document.js","../src/trix/models/html_sanitizer.js","../src/trix/models/html_parser.js","../src/trix/core/serialization.js","../src/trix/models/managed_attachment.js","../src/trix/models/attachment_manager.js","../src/trix/models/line_break_insertion.js","../src/trix/models/composition.js","../src/trix/models/undo_manager.js","../src/trix/filters/filter.js","../src/trix/filters/attachment_gallery_filter.js","../src/trix/models/editor.js","../src/trix/models/location_mapper.js","../src/trix/models/point_mapper.js","../src/trix/models/selection_manager.js","../src/trix/controllers/attachment_editor_controller.js","../src/trix/controllers/composition_controller.js","../src/trix/controllers/controller.js","../src/trix/observers/mutation_observer.js","../src/trix/operations/file_verification_operation.js","../src/trix/controllers/input_controller.js","../src/trix/controllers/level_0_input_controller.js","../src/trix/controllers/level_2_input_controller.js","../src/trix/controllers/toolbar_controller.js","../src/trix/controllers/editor_controller.js","../src/trix/elements/trix_toolbar_element.js","../src/trix/elements/trix_editor_element.js","../src/trix/trix.js"],"sourcesContent":["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n","const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n","export default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: (function() {\n    if (typeof InputEvent === \"undefined\") {\n      return false\n    }\n    for (const property of [ \"data\", \"getTargetRanges\", \"inputType\" ]) {\n      if (!(property in InputEvent.prototype)) {\n        return false\n      }\n    }\n    return true\n  })(),\n}\n","export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n","/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n","export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n","export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n","import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n","import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n","export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n","import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n","import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n","const undo = { interval: 5000 }\nexport default undo\n","export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n","export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n","import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(input.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      input.value = string\n      return new FormData(form).get(input.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n","import * as config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n","/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    return element.getAttribute(\"content\")\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n","const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n","export const defer = (fn) => setTimeout(fn, 1)\n","/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n","import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.run = this.run.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      if (\"onselectionchange\" in document) {\n        return document.addEventListener(\"selectionchange\", this.update, true)\n      } else {\n        return this.run()\n      }\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((s) => s !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    const domRange = getDOMRange()\n    if (!domRangesAreEqual(domRange, this.domRange)) {\n      this.domRange = domRange\n      return this.notifySelectionManagersOfSelectionChange()\n    }\n  }\n\n  reset() {\n    this.domRange = null\n    return this.update()\n  }\n\n  // Private\n\n  run() {\n    if (this.started) {\n      this.update()\n      return requestAnimationFrame(this.run)\n    }\n  }\n}\n\nconst domRangesAreEqual = (left, right) =>\n  left?.startContainer === right?.startContainer &&\n  left?.startOffset === right?.startOffset &&\n  left?.endContainer === right?.endContainer &&\n  left?.endOffset === right?.endOffset\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n","/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n","export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n","export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n","import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n","import * as config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      innerElement.innerHTML = this.attachment.getContent()\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  div.innerHTML = html || \"\"\n  return div.querySelector(tagName)\n}\n","import * as config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n","/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n","/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n","import * as config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    let attributes, className\n    const attributeName = this.attributes[depth]\n\n    const { tagName } = getBlockConfig(attributeName)\n    if (depth === 0 && this.block.isRTL()) {\n      attributes = { dir: \"rtl\" }\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n","import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n","import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n","import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n","import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice([ attribute ]))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n","import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n","/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes)\n  }\n\n  constructor(text, attributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n","import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray()).map((block) => JSON.parse(block.text.toConsole()))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    return this.normalizeListElementNesting()\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n","/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}) => {\n  const text = []\n  return { text, attributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      const html = HTMLSanitizer.sanitize(this.html).getHTML()\n      this.containerElement.innerHTML = html\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (element.parentNode.firstChild !== element) {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n          break\n        case \"td\":\n          if (element.parentNode.firstChild !== element) {\n            return this.appendStringWithAttributes(\" | \")\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n","/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n","import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n","import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n","export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n","import * as config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n","const BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nexport default class Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n","import Filter from \"./filter\"\n\nexport const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\n","import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n","/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n","/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n","/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n","import { removeNode } from \"trix/core/helpers\"\n\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n","import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n","/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n","import * as config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n","import { getAllAttributeNames, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\n\nimport { dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n      if (handler) {\n        this.withEvent(event, handler)\n        return this.scheduleRender()\n      }\n    },\n\n    input(event) {\n      return selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        return this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransfer.files?.length) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      return this.insertString(this.event.dataTransfer.getData(\"text/plain\"), { updatePosition: false })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"Files\") && clipboard.types.length === 1 && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-trix-validate\", \"\")\n      input.classList.add(\"trix-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport * as config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName) {\n    return this.invokeAction(actionName)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setInputElementValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n","import * as config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n","import * as config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty:not(:focus)::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nexport default class TrixEditorElement extends HTMLElement {\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    const labels = []\n    if (this.id && this.ownerDocument) {\n      labels.push(...Array.from(this.ownerDocument.querySelectorAll(`label[for='${this.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setInputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n      ensureAriaLabel(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.registerResetListener()\n      this.registerClickListener()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.unregisterResetListener()\n    return this.unregisterClickListener()\n  }\n\n  // Form support\n\n  registerResetListener() {\n    this.resetListener = this.resetBubbled.bind(this)\n    return window.addEventListener(\"reset\", this.resetListener, false)\n  }\n\n  unregisterResetListener() {\n    return window.removeEventListener(\"reset\", this.resetListener, false)\n  }\n\n  registerClickListener() {\n    this.clickListener = this.clickBubbled.bind(this)\n    return window.addEventListener(\"click\", this.clickListener, false)\n  }\n\n  unregisterClickListener() {\n    return window.removeEventListener(\"click\", this.clickListener, false)\n  }\n\n  resetBubbled(event) {\n    if (event.defaultPrevented) return\n    if (event.target !== this.form) return\n    return this.reset()\n  }\n\n  clickBubbled(event) {\n    if (event.defaultPrevented) return\n    if (this.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    return this.focus()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n","import { version } from \"../../package.json\"\n\nimport * as config from \"trix/config\"\nimport * as core from \"trix/core\"\nimport * as models from \"trix/models\"\nimport * as views from \"trix/views\"\nimport * as controllers from \"trix/controllers\"\nimport * as observers from \"trix/observers\"\nimport * as operations from \"trix/operations\"\nimport * as elements from \"trix/elements\"\nimport * as filters from \"trix/filters\"\n\nlet started = false\n\nfunction start() {\n  if (!started) {\n    customElements.define(\"trix-toolbar\", elements.TrixToolbarElement)\n    customElements.define(\"trix-editor\", elements.TrixEditorElement)\n    started = true\n  }\n}\n\nconst Trix = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  operations,\n  elements,\n  filters,\n  start\n}\n\nwindow.Trix = Trix\n\nexport default Trix\n"],"names":["attachmentSelector","attachments","preview","presentation","caption","name","size","file","attributes","default","tagName","parse","quote","nestable","heading1","terminal","breakOnReturn","group","code","text","plaintext","bulletList","bullet","listAttribute","test","element","parentNode","this","numberList","number","attachmentGallery","exclusive","_element$tagName","toLowerCase","browser$1","composesExistingText","navigator","userAgent","forcesObjectResizing","supportsInputEvents","InputEvent","property","prototype","lang$1","attachFiles","bold","bullets","byte","bytes","captionPlaceholder","indent","italic","link","numbers","outdent","redo","remove","strike","undo","unlink","url","urlPlaceholder","GB","KB","MB","PB","TB","sizes","lang","file_size_formatting","prefix","precision","formatter","base","exp","Math","floor","log","withoutInsignificantZeros","pow","toFixed","replace","concat","ZERO_WIDTH_SPACE","NON_BREAKING_SPACE","extend","properties","key","value","html","document","documentElement","match","matches","handleEvent","eventName","onElement","matchingSelector","withCallback","inPhase","preventDefault","times","selector","useCapture","handler","event","destroy","target","findClosestElementFromNode","call","removeEventListener","addEventListener","triggerEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","elementMatchesSelector","nodeType","node","untilNode","Node","ELEMENT_NODE","closest","innerElementIsActive","activeElement","elementContainsNode","findChildIndexOfNode","_node","childIndex","previousSibling","removeNode","_node$parentNode","removeChild","walkTree","tree","onlyNodesOfType","usingFilter","expandEntityReferences","whatToShow","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","SHOW_COMMENT","SHOW_ALL","createTreeWalker","makeElement","tag","options","createElement","editable","contenteditable","setAttribute","style","data","dataset","className","split","forEach","classList","add","textContent","childNodes","childNode","appendChild","blockTagNames","getBlockTagNames","blockAttributes","push","nodeIsBlockContainer","nodeIsBlockStartComment","firstChild","nodeProbablyIsBlockContainer","includes","nodeIsBlockStart","strict","arguments","length","undefined","nodeIsCommentNode","COMMENT_NODE","nodeIsCursorTarget","nodeIsTextNode","trixCursorTarget","nodeIsAttachmentElement","nodeIsEmptyTextNode","TEXT_NODE","input","level2Enabled","getLevel","browser","pickFiles","callback","type","multiple","hidden","id","fileInputId","files","getElementById","body","click","text_attributes","inheritable","parser","window","getComputedStyle","fontWeight","fontStyle","href","groupTagName","getAttribute","frozen","backgroundColor","toolbar","getDefaultHTML","interval","attachment","attachmentCaption","attachmentCaptionEditor","attachmentMetadata","attachmentMetadataContainer","attachmentName","attachmentProgress","attachmentSize","attachmentToolbar","BasicObject","proxyMethod","expression","toMethod","toProperty","optional","parseProxyMethodExpression","subject","object","_this$toMethod","_object","apply","proxyMethodExpressionPattern","Error","args","Function","RegExp","UTF16String","static","fromUCS2String","toString","ucs2String","ucs2decode","fromCodepoints","codepoints","ucs2encode","constructor","super","ucs2Length","offsetToUCS2Offset","offset","slice","max","offsetFromUCS2Offset","ucs2Offset","charAt","isEqualTo","box","toJSON","getCacheKey","hasArrayFrom","Array","from","_Array$from","hasStringCodePointAt","_$codePointAt","codePointAt","hasStringFromCodePoint","String","_String$fromCodePoint","fromCodePoint","string","map","char","output","counter","charCodeAt","extra","array","result","fromCharCode","join","TrixObject","fromJSONString","jsonString","fromJSON","JSON","hasSameConstructorAs","inspect","parts","contents","contentsForInspection","toJSONString","stringify","toUTF16String","arraysAreEqual","a","b","index","spliceArray","_len","_key","splice","RTL_PATTERN","getDirection","dir","dirName","form","supportsDirName","FormData","has","error","supportsDirSelector","get","trim","allAttributeNames","blockAttributeNames","textAttributeNames","listAttributeNames","getAllAttributeNames","getTextAttributeNames","getBlockAttributeNames","getBlockConfig","attributeName","config","Object","keys","getTextConfig","installDefaultCSSForTagName","defaultCSS","insertStyleElementForTagName","nonce","getCSPNonce","head","insertBefore","getMetaElement","querySelector","testTransferData","dataTransferIsPlainText","dataTransfer","getData","DOMParser","parseFromString","keyEventIsKeyboardCommand","platform","metaKey","ctrlKey","defer","fn","setTimeout","copyObject","objectsAreEqual","normalizeRange","range","isArray","copyValue","rangeIsCollapsed","start","end","rangeValuesAreEqual","rangesAreEqual","leftRange","rightRange","leftStart","leftEnd","rightStart","rightEnd","left","right","SelectionChangeObserver","update","bind","run","selectionManagers","started","stop","registerSelectionManager","selectionManager","unregisterSelectionManager","filter","s","notifySelectionManagersOfSelectionChange","selectionDidChange","domRange","getDOMRange","domRangesAreEqual","reset","requestAnimationFrame","startContainer","startOffset","endContainer","endOffset","selectionChangeObserver","getDOMSelection","selection","getSelection","rangeCount","_getDOMSelection","getRangeAt","domRangeIsPrivate","setDOMRange","removeAllRanges","addRange","nodeIsPrivate","getPrototypeOf","normalizeSpaces","breakableWhitespacePattern","squishBreakableWhitespace","source","utf16StringDifferences","diffA","utf16StringDifference","utf16String","diffB","leftIndex","rightIndexA","rightIndexB","Hash","objects","hash","getKeys","getKeysCommonToHash","values","copy","merge","unbox","toArray","isEmpty","toObject","keyToRemove","sort","ObjectGroup","ungroupedObjects","depth","asTree","_object$canBeGrouped2","_object$canBeGrouped","_group$canBeGroupedWi","_group","canBeGrouped","canBeGroupedWith","groupObjects","getObjects","getDepth","ObjectMap","find","ElementStore","elements","getKey","trixStoreKey","Operation","isPerforming","performing","hasPerformed","performed","hasSucceeded","succeeded","hasFailed","getPromise","promise","Promise","resolve","reject","perform","release","_this$promise","_this$promise$cancel","cancel","ObjectView","childViews","rootView","getNodes","nodes","createNodes","cloneNode","invalidate","_this$parentView","parentView","invalidateViewForObject","_this$findViewForObje","findViewForObject","findOrCreateCachedChildView","viewClass","view","getCachedViewForObject","recordChildView","createChildView","cacheViewForObject","ObjectGroupView","getAllChildViews","views","childView","findElement","findElementForObject","getViewCache","isViewCachingEnabled","viewCache","shouldCacheViews","enableViewCaching","disableViewCaching","_this$getViewCache","cache","garbageCollectCachedViews","objectKeys","objectGroup","getChildViews","createContainerElement","css","AttachmentView","uploadProgressDelegate","attachmentPiece","piece","createContentNodes","innerElement","figure","getClassName","getHref","tabindex","hasContent","innerHTML","getContent","createCaptionElement","isPending","progressElement","class","getUploadProgress","trixMutable","createCursorTarget","figcaption","getCaption","captionConfig","getCaptionConfig","getFilename","getFormattedFilesize","nameElement","createTextNode","sizeElement","names","getType","extension","getExtension","trixAttachment","trixContentType","getContentType","trixId","trixAttributes","trixSerialize","htmlContainsTagName","_config$attachments$t","findProgressElement","_this$findElement","attachmentDidChangeUploadProgress","div","PreviewableAttachmentView","previewDelegate","image","src","refresh","updateAttributesForImage","getURL","previewURL","getPreviewURL","removeAttribute","serializedAttributes","width","getWidth","height","getHeight","storeKey","attachmentDidChangeAttributes","PieceView","getAttributes","textConfig","context","createAttachmentNodes","createStringNodes","_element","firstElementChild","findInnerElement","isPreviewable","_this$textConfig","iterable","substring","preserveSpaces","styles","pendingElement","styleProperty","isLast","isFirst","followsWhitespace","TextView","pieces","getPieces","lastIndex","endsWithWhitespace","previousPiece","hasAttribute","BlockView","block","createComment","_getBlockConfig","getLastAttribute","textView","shouldAddExtraNewlineElement","isRTL","getBlockBreakPosition","DocumentView","render","sync","elementStore","setDocument","shadowElement","getBlocks","isSynced","elementsHaveEqualHTML","fragment","createDocumentFragmentForSync","lastChild","didSync","findStoredElements","createDocumentFragment","storedElement","replaceChild","querySelectorAll","otherElement","ignoreSpaces","Piece","types","pieceJSON","copyWithAttributes","getValue","copyWithAdditionalAttributes","copyWithoutAttribute","attribute","getAttributesHash","hasSameStringValueAsPiece","hasSameAttributesAsPiece","isBlockBreak","isSerializable","getLength","canBeConsolidatedWith","ImagePreloadOperation","Image","onload","naturalWidth","naturalHeight","onerror","Attachment","attachmentForFile","attributesForFile","setFile","filename","filesize","contentType","attachmentJSON","releaseFile","didChangeAttributes","setAttributes","newAttributes","_this$previewDelegate","_this$previewDelegate2","_this$delegate","_this$delegate$attach","delegate","preloadURL","previewablePattern","getFilesize","_this$getFilename$mat","getFile","preloadFile","releasePreloadedFile","uploadProgress","setUploadProgress","_this$uploadProgressD","_this$uploadProgressD2","preloadingURL","setPreviewURL","_this$previewDelegate3","_this$previewDelegate4","_this$delegate2","_this$delegate2$attac","attachmentDidChangePreviewURL","preload","fileObjectURL","URL","createObjectURL","revokeObjectURL","then","_ref","catch","AttachmentPiece","ensureAttachmentExclusivelyHasAttribute","removeProhibitedAttributes","permittedAttributes","_piece$attachment","json","toConsole","registerType","StringPiece","normalizeNewlines","consolidateWith","splitAtOffset","SplittableList","indexOf","eachObject","insertObjectAtIndex","insertSplittableListAtIndex","splittableList","insertSplittableListAtPosition","position","splitObjectAtPosition","editObjectAtIndex","replaceObjectAtIndex","removeObjectAtIndex","getObjectAtIndex","getSplittableListInRange","rightIndex","splitObjectsAtRange","selectSplittableList","removeObjectsInRange","transformObjectsInRange","transform","transformedObjects","rightOuterIndex","leftInnerIndex","startOfRange","endOfRange","getObjectAtPosition","findIndexAndOffsetAtPosition","splitIndex","splitOffset","leftObject","rightObject","consolidate","pendingObject","_pendingObject$canBeC","_pendingObject","consolidateFromIndexToIndex","startIndex","endIndex","objectsInRange","consolidatedInRange","currentPosition","nextPosition","findPositionAtIndexAndOffset","currentIndex","getEndPosition","endPosition","objectArraysAreEqual","Text","textJSON","notEmpty","pieceList","copyWithPieceList","copyUsingObjectMap","objectMap","appendText","insertTextAtPosition","removeTextAtRange","replaceTextAtRange","moveTextFromRangeToPosition","getTextAtRange","addAttributeAtRange","addAttributesAtRange","removeAttributeAtRange","setAttributesAtRange","getAttributesAtPosition","_this$pieceList$getOb","getCommonAttributes","fromCommonAttributesOfObjects","getCommonAttributesAtRange","getExpandedRangeForAttributeAtOffset","getStringAtRange","getStringAtPosition","startsWithString","endsWithString","getAttachmentPieces","getAttachments","getAttachmentAndPositionById","attachmentId","getAttachmentById","getRangeOfAttachment","attachmentAndPosition","updateAttributesForAttachment","_text$pieceList","eachPiece","getPieceAtPosition","toSerializableText","Block","blockJSON","applyBlockBreakToText","copyWithText","copyWithoutText","copyWithoutAttributes","mappedText","addAttribute","expandAttribute","removeLastValue","removeLastAttribute","getLastElement","getAttributeLevel","getAttributeAtLevel","level","hasAttributes","getLastNestableAttribute","getNestableAttributes","getNestingLevel","decreaseNestingLevel","increaseNestingLevel","lastIndexOf","getListItemAttributes","isListItem","isTerminalBlock","_getBlockConfig2","breaksOnReturn","_getBlockConfig3","findLineBreakInDirectionFromPosition","direction","newlineText","textForStringWithAttributes","getTextWithoutBlockBreak","textEndsInBlockBreak","otherBlock","otherAttributes","otherAttribute","getListAttributeNames","unmarkExistingInnerBlockBreaksInText","addBlockBreakToText","modified","innerPieces","lastPiece","unmarkBlockBreakPiece","blockBreakText","blockBreak","endText","Document","documentJSON","textAttributes","blocks","blockList","getBlockAtIndex","consolidateBlocks","copyUsingObjectsFromDocument","sourceDocument","copyWithBaseBlockAttributes","replaceBlock","oldBlock","newBlock","insertDocumentAtRange","locationFromPosition","getBlockAtPosition","mergeDocumentAtRange","formattedDocument","startPosition","startLocation","baseBlockAttributes","getBaseBlockAttributes","trailingBlockAttributes","leadingBlockAttributes","blockCount","getBlockCount","firstBlock","firstText","insertTextAtRange","leftPosition","rightPosition","leftLocation","rightLocation","locationRangeFromRange","leftOffset","leftBlock","rightOffset","rightBlock","leftText","rightText","affectedBlockCount","getDocumentAtRange","movingRightward","eachBlockAtRange","textRange","eachBlock","getTextAtIndex","removeAttributeForAttachment","insertBlockBreakAtRange","applyBlockAttributeAtRange","expanded","expandRangeToLineBreaksAndSplitBlocks","blockConfig","removeLastListAttributeAtRange","exceptAttributeName","converted","convertLineBreaksToBlockBreaksInRange","removeBlockAttributesAtRange","removeLastTerminalAttributeAtRange","consolidateBlocksAtRange","lastAttributeName","endLocation","startBlock","positionFromLocation","endBlock","_this$getBlockAtIndex","getTextAtPosition","getCharacterAtPosition","getEditCount","editCount","getCommonAttributesAtPosition","attributesForBlock","commonAttributes","attributesLeft","inheritableAttributes","getRangeOfCommonAttributeAtPosition","blockIndex","lastAttributeIndex","min","attachmentPieces","getLocationRangeOfAttachment","getAttachmentPieceForAttachment","findRangesForBlockAttribute","ranges","findRangesForTextAttribute","withValue","location","locationRangeFromPosition","rangeFromLocationRange","locationRange","getTexts","toSerializableDocument","DEFAULT_ALLOWED_ATTRIBUTES","DEFAULT_FORBIDDEN_PROTOCOLS","DEFAULT_FORBIDDEN_ELEMENTS","HTMLSanitizer","sanitizer","sanitize","allowedAttributes","forbiddenProtocols","forbiddenElements","createBodyElementForHTML","sanitizeElements","normalizeListElementNesting","getHTML","getBody","walker","nodesToRemove","nextNode","currentNode","elementIsRemovable","sanitizeElement","protocol","listElement","previousElement","previousElementSibling","elementIsForbidden","elementIsntSerializable","doc","implementation","createHTMLDocument","pieceForString","parseTrixDataAttribute","HTMLParser","referenceElement","blockElements","processedElements","getDocument","createHiddenContainer","containerElement","nodeFilter","processNode","translateBlockElementMarginsToNewlines","removeHiddenContainer","display","nextSibling","isInsignificantTextNode","appendBlockForTextNode","processTextNode","appendBlockForElement","processElement","currentBlockElement","isBlockElement","appendStringWithAttributes","_this$currentBlock","getBlockAttributes","currentBlock","appendBlockForAttributesWithElement","elementIsBlockElement","currentBlockContainsElement","parentBlockElement","findParentBlockElement","appendEmptyBlock","parentElement","_node$previousSibling","elementCanDisplayPreformattedText","stringEndsWithWhitespace","leftTrimBreakableWhitespace","getTextAttributes","appendAttachmentWithAttributes","isExtraBR","dimensions","parseInt","getImageDimensions","blockForAttributes","appendPiece","pieceForAttachment","appendStringToTextAtIndex","prependStringToTextAtIndex","unshift","configAttr","attributeInheritedFromBlock","blockElement","findBlockElementAncestors","attrConfig","_attrConfig$test","reverse","ancestors","stringIsAllBreakableWhitespace","nodeEndsWithNonWhitespace","defaultMargin","getMarginOfDefaultBlockElement","margin","getMarginOfBlockElementAtIndex","top","bottom","getBlockElementMargin","whiteSpace","marginTop","marginBottom","FILTER_REJECT","FILTER_ACCEPT","unserializableAttributeNames","serializedAttributesAttribute","serializedAttributesSelector","blockCommentPattern","serializers","serializable","HTMLElement","el","ManagedAttachment","attachmentManager","requestRemovalOfAttachment","AttachmentManager","managedAttachments","manageAttachment","attachmentIsManaged","attachmentManagerDidRequestRemovalOfAttachment","unmanageAttachment","managedAttachment","LineBreakInsertion","composition","selectedRange","getSelectedRange","previousCharacter","nextCharacter","shouldInsertBlockBreak","shouldBreakFormattedBlock","shouldDecreaseListLevel","shouldPrependListItem","shouldRemoveLastBlockAttribute","Composition","currentAttributes","revision","_this$delegate$compos","refreshAttachments","compositionDidChangeDocument","getSnapshot","loadSnapshot","_this$delegate2$compo","_this$delegate3","_this$delegate3$compo","compositionWillLoadSnapshot","setSelection","compositionDidLoadSnapshot","insertText","updatePosition","notifyDelegateOfInsertionAtRange","insertBlock","insertDocument","insertString","getCurrentTextAttributes","insertBlockBreak","insertLineBreak","insertion","decreaseListLevel","removeLastBlockAttribute","breakFormattedBlock","insertHTML","replaceHTML","getLocationRange","insertFile","insertFiles","_this$delegate4","compositionShouldAcceptFile","insertAttachments","insertAttachment","attachmentText","textForAttachmentWithAttributes","shouldManageDeletingInDirection","shouldManageMovingCursorInDirection","deleteInDirection","deletingIntoPreviousBlock","selectionSpansBlocks","selectionIsCollapsed","canDecreaseBlockAttributeLevel","getBlock","decreaseBlockAttributeLevel","getExpandedRangeInDirection","getAttachmentAtRange","editAttachment","moveTextFromRange","removeAttachment","stopEditingAttachment","removeCurrentAttribute","insertPlaceholder","placeholderPosition","getPosition","selectPlaceholder","setSelectedRange","forgetPlaceholder","hasCurrentAttribute","toggleCurrentAttribute","setCurrentAttribute","canSetCurrentAttribute","canSetCurrentBlockAttribute","canSetCurrentTextAttribute","getSelectedDocument","setBlockAttribute","setTextAttribute","notifyDelegateOfCurrentAttributesChange","removeBlockAttribute","updateCurrentAttributes","removeTextAttribute","canDecreaseNestingLevel","_this$getBlock","canIncreaseNestingLevel","previousBlock","getPreviousBlock","arrayStartsWith","_this$getBlock2","_this$getBlock3","attributeLevel","ignoreLock","getCurrentAttributes","freezeSelection","thawSelection","hasFrozenSelection","_this$delegate5","compositionDidRequestChangingSelectionToLocationRange","getSelectionManager","setLocationRange","targetLocationRange","withTargetLocationRange","withTargetRange","withTargetDOMRange","createLocationRangeFromDOMRange","translateUTF16PositionFromOffset","editingAttachment","moveCursorInDirection","canEditAttachment","expandSelectionInDirection","expandSelectionForEditing","expandSelectionAroundCommonAttribute","selectionContainsAttachments","_this$getSelectedAtta","getSelectedAttachments","selectionIsInCursorTarget","positionIsCursorTarget","locationIsCursorTarget","positionIsBlockBreak","_this$document$getPie","_this$getSelectedDocu","added","removed","oldArray","newArray","existingValues","Set","currentValues","summarizeArrayChange","_this$delegate6","_this$delegate6$compo","compositionDidRemoveAttachment","_this$delegate7","_this$delegate7$compo","compositionDidAddAttachment","_this$delegate8","_this$delegate8$compo","compositionDidEditAttachment","_this$delegate9","_this$delegate9$compo","compositionDidChangeAttachmentPreviewURL","_this$delegate10","_this$delegate10$comp","compositionDidStartEditingAttachment","_this$delegate11","_this$delegate11$comp","compositionDidStopEditingAttachment","newDocument","OBJECT_REPLACEMENT_CHARACTER","_this$delegate12","_this$delegate12$comp","compositionDidChangeCurrentAttributes","_this$delegate13","_this$delegate13$comp","compositionDidPerformInsertionAtRange","utf16string","utf16position","UndoManager","undoEntries","redoEntries","recordUndoEntry","description","consolidatable","previousEntry","entryHasDescriptionAndContext","undoEntry","createEntry","pop","redoEntry","snapshot","canUndo","canRedo","entry","BLOCK_ATTRIBUTE_NAME","Filter","applyBlockAttribute","findRangesOfBlocks","findRangesOfPieces","moveSelectedRangeForward","attachmentGalleryFilter","DEFAULT_FILTERS","Editor","undoManager","filters","loadDocument","loadHTML","loadJSON","getClientRectAtPosition","getClientRectAtLocationRange","activateAttribute","attributeIsActive","canActivateAttribute","deactivateAttribute","LocationMapper","findLocationFromContainerAndOffset","container","foundBlock","attachmentElement","findAttachmentElementParentForNode","rejectAttachmentContents","nodeLength","findContainerAndOffsetFromLocation","nodeOffset","findNodeAndOffsetFromLocation","getSignificantNodesForIndex","acceptSignificantNodes","recordingNodes","rejectEmptyTextNodes","PointMapper","createDOMRangeFromPoint","x","y","caretPositionFromPoint","offsetNode","createRange","setStart","caretRangeFromPoint","createTextRange","originalDOMRange","moveToPoint","select","getClientRectsForDOMRange","getClientRects","SelectionManager","didMouseDown","locationMapper","pointMapper","lockCount","currentLocationRange","lockedLocationRange","createDOMRangeFromLocationRange","updateCurrentLocationRange","setLocationRangeFromPointRange","pointRange","getLocationAtPoint","lock","unlock","clearSelection","_getDOMRange","collapsed","selectionIsExpanded","domRangeWithinElement","pauseTemporarily","resumeHandlers","paused","resume","clearTimeout","resumeTimeout","_this$delegate$locati","locationRangeDidChange","rangeStart","rangeEnd","setEnd","point","_this$createLocationR","keyNames","undoable","commands","do","undos","AttachmentEditorController","title","trixAction","didClickToolbar","didClickActionButton","textarea","placeholder","textareaClone","tabIndex","autoresize","scrollHeight","didInputCaption","didKeyDownCaption","didChangeCaption","didBlurCaption","editingFigcaption","editCaption","focus","install","makeElementMutable","addToolbar","installCaptionEditor","uninstall","savePendingCaption","didUninstallAttachmentEditor","pendingCaption","_this$delegate3$attac","attachmentEditorDidRequestUpdatingAttributesForAttachment","attachmentEditorDidRequestRemovingAttributeForAttachment","stopPropagation","attachmentEditorDidRequestRemovalOfAttachment","_this$delegate5$attac","keyCode","attachmentEditorDidRequestDeselectingAttachment","CompositionController","didFocus","didBlur","didClickAttachment","documentView","_this$blurPromise","focused","compositionControllerDidFocus","blurPromise","compositionControllerDidBlur","findAttachmentForElement","compositionControllerDidSelectAttachment","getSerializableElement","isEditingAttachment","_this$delegate4$compo","_this$delegate5$compo","canSyncDocumentView","compositionControllerWillSyncDocumentView","compositionControllerDidSyncDocumentView","compositionControllerDidRender","rerenderViewForObject","refreshViewCache","attachmentEditor","installAttachmentEditorForAttachment","_this$attachmentEdito","uninstallAttachmentEditor","_this$attachmentEdito2","compositionControllerWillUpdateAttachment","compositionControllerDidRequestRemovalOfAttachment","compositionControllerDidRequestDeselectingAttachment","Controller","mutableAttributeName","mutableSelector","childList","characterData","characterDataOldValue","subtree","MutationObserver","didMutate","observer","observe","disconnect","mutations","_this$delegate$elemen","findSignificantMutations","elementDidMutate","getMutationSummary","mutation","mutationIsSignificant","nodeIsMutable","nodesModifiedByMutation","nodeIsSignificant","addedNodes","removedNodes","getTextMutationSummary","additions","deletions","getTextChangesFromCharacterData","textChanges","getTextChangesFromChildList","addition","summary","textAdded","deleted","textDeleted","getMutationsByType","textRemoved","getTextForNodes","characterMutations","startMutation","endMutation","summarized","oldString","newString","summarizeStringChange","oldValue","FileVerificationOperation","reader","FileReader","abort","readAsArrayBuffer","InputController","mutationObserver","events","handlerFor","mutationSummary","editorWillSyncDocumentView","editorDidSyncDocumentView","requestRender","_this$delegate$inputC","inputControllerDidRequestRender","requestReparse","_this$delegate2$input","inputControllerDidRequestReparse","operations","all","handleInput","_this$responder","inputControllerWillAttachFiles","responder","defaultPrevented","inputControllerWillHandleInput","inputControllerDidHandleInput","createLinkHTML","outerHTML","pastedFileCount","Level0InputController","resetInputSummary","setInputSummary","inputSummary","isComposing","inputControllerDidAllowUnhandledInput","mutationIsExpected","preferDocument","mutationAdditionMatchesSummary","mutationDeletionMatchesSummary","didDelete","unexpectedNewlineAddition","unexpectedNewlineDeletion","_this$compositionInpu","textChanged","composedEmptyString","getEndData","compositionInput","getCompositionInput","CompositionInput","isEnded","_this$responder2","serializeSelectionToDataTransfer","_this$responder3","setData","dataTransferIsWritable","canAcceptDataTransfer","Files","getPastedHTMLUsingHiddenElement","pageXOffset","pageYOffset","opacity","keydown","didInput","keyName","_context2","modifier","_context","character","inputControllerDidReceiveKeyboardCommand","keypress","altKey","stringFromKeyEvent","_this$responder9","inputControllerWillPerformTyping","textInput","toUpperCase","_this$responder10","dragenter","dragstart","_this$delegate5$input","draggedRange","inputControllerDidStartDrag","dragover","draggingPoint","clientX","clientY","_this$delegate6$input","inputControllerDidReceiveDragOverPoint","dragend","_this$delegate7$input","inputControllerDidCancelDrag","drop","_event$dataTransfer","_this$responder11","_this$responder12","inputControllerWillMoveText","_this$responder13","cut","_this$responder14","clipboardData","inputControllerWillCutText","_this$responder15","paste","clipboard","testClipboardData","pasteEventIsCrippledSafariHTMLPaste","_this$responder16","inputControllerWillPaste","inputControllerDidPaste","_this$responder17","_this$delegate14","_this$responder18","_this$delegate15","_this$delegate16","_this$responder19","_this$delegate17","_clipboard$items","_clipboard$items$","_clipboard$items$$get","items","getAsFile","_this$delegate18","_this$responder20","_this$delegate19","extensionForFile","compositionstart","compositionupdate","compositionend","beforeinput","backspace","_this$delegate20","delete","_this$delegate21","return","_this$delegate22","_this$responder21","tab","_this$responder22","_this$responder23","_this$responder24","_this$responder25","control","d","_this$delegate23","h","_this$delegate24","o","_this$delegate25","_this$responder26","shift","_this$delegate26","_this$responder27","_this$responder28","_this$responder29","alt","_this$delegate27","meta","_this$delegate28","_file$type","_file$type$match","which","charCode","hasPasteboardFlavor","hasReadableDynamicData","isExternalHTMLPaste","isExternalRichTextPaste","inputController","isSignificant","_this$responder5","_this$responder4","canApplyToDocument","_this$responder6","_this$responder7","_this$responder8","_this$data$start","_this$data$end","Level2InputController","scheduledRender","composing","reparse","scheduleRender","_this$afterRender","cancelAnimationFrame","afterRender","toggleAttributeIfSupported","inputControllerWillPerformFormatting","activateAttributeIfSupported","getTargetDOMRange","minLength","_this$event$getTarget","_this$event","targetRanges","getTargetRanges","staticRangeToRange","withEvent","command","keyboardCommandFromKeyEvent","shiftKey","_event$clipboardData","pasteEventHasFilesOnly","pasteEventHasPlainTextOnly","inputTypes","inputType","dragging","pointFromEvent","dragEventHasFiles","ArrowLeft","ArrowRight","Backspace","Tab","deleteByComposition","deleteByCut","deleteByDrag","deleteByDragRange","deleteCompositionText","deleteContent","deleteContentBackward","deleteContentForward","deleteEntireSoftLine","deleteHardLineBackward","deleteHardLineForward","deleteSoftLineBackward","deleteSoftLineForward","deleteWordBackward","deleteWordForward","formatBackColor","formatBold","formatFontColor","formatFontName","formatIndent","formatItalic","formatJustifyCenter","formatJustifyFull","formatJustifyLeft","formatJustifyRight","formatOutdent","formatRemove","_this$responder30","formatSetBlockTextDirection","formatSetInlineTextDirection","formatStrikeThrough","formatSubscript","formatSuperscript","formatUnderline","historyRedo","inputControllerWillPerformRedo","historyUndo","inputControllerWillPerformUndo","insertCompositionText","insertFromComposition","insertFromDrop","_this$responder31","insertFromPaste","_dataTransfer$files","_this$responder32","_this$responder33","_this$responder34","_this$responder35","insertFromYank","insertLink","insertOrderedList","insertParagraph","_this$responder36","insertReplacementText","_this$event$dataTrans","insertTranspose","insertUnorderedList","staticRange","attributeButtonSelector","actionButtonSelector","toolbarButtonSelector","dialogSelector","activeDialogSelector","dialogButtonSelector","dialogInputSelector","getInputForDialog","getAttributeName","getActionName","ToolbarController","didClickAttributeButton","didClickDialogButton","didKeyDownDialogInput","actions","resetDialogInputs","toolbarDidClickButton","actionName","getDialog","toggleDialog","toolbarDidInvokeAction","toolbarDidToggleAttribute","refreshAttributeButtons","dialogElement","dialog","hideDialog","updateActions","refreshActionButtons","eachActionButton","disabled","updateAttributes","eachAttributeButton","dialogIsVisible","applyKeyboardCommand","keyString","button","buttonKeys","buttonKeyString","dialogName","showDialog","toolbarWillShowDialog","disabledInput","toolbarDidShowDialog","willValidate","checkValidity","toolbarDidUpdateAttribute","toolbarDidRemoveAttribute","toolbarDidHideDialog","getDialogName","EditorController","editorElement","compositionController","toolbarController","toolbarElement","editor","notifyEditorElement","handlingInput","updateCurrentActions","pasting","pastedRange","attachmentLocationRange","loadingSnapshot","isFocused","requestedLocationRange","compositionRevisionWhenLocationRangeRequested","renderedCompositionRevision","runEditorFilters","isFocusedInvisibly","requestedRender","recordTypingUndoEntry","recordFormattingUndoEntry","locationRangeBeforeDrag","invokeAction","selectionFrozen","canInvokeAction","actionIsExternal","_this$actions$actionN","_this$actions$actionN2","_this$actions$actionN3","_this$actions$actionN4","getCurrentActions","currentActions","updateInputElement","serializer","serializeToContentType","setInputElementValue","message","documentChangedSinceLastRender","notify","getUndoContext","getLocationContext","getTimeContext","Date","getTime","_this$editorElement$o","ownerDocument","TrixToolbarElement","connectedCallback","makeEditable","handleEventOnce","configureContentEditable","setDefaultParagraphSeparator","disableObjectResizing","_document$queryComman","_document","queryCommandSupported","execCommand","_document$queryComman2","_document2","cursorTargetStyles","TrixEditorElement","labels","label","_this$ownerDocument","toolbarId","_this$inputElement","inputElement","_this$ownerDocument2","inputId","nextElementSibling","_this$editorControlle","editorController","_this$inputElement2","_this$inputElement3","defaultValue","_this$editor","addAccessibilityRole","texts","contains","ensureAriaLabel","registerResetListener","registerClickListener","autofocus","disconnectedCallback","_this$editorControlle2","unregisterResetListener","unregisterClickListener","resetListener","resetBubbled","clickListener","clickBubbled","Trix","VERSION","version","core","models","controllers","observers","customElements","define"],"mappings":"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"}