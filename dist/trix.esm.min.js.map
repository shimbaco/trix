{"version":3,"file":"trix.esm.min.js","sources":["../src/trix/config/attachments.js","../src/trix/config/block_attributes.js","../src/trix/config/browser.js","../src/trix/config/lang.js","../src/trix/config/file_size_formatting.js","../src/trix/constants.js","../src/trix/core/helpers/extend.js","../src/trix/core/helpers/dom.js","../src/trix/config/input.js","../src/trix/config/key_names.js","../src/trix/config/text_attributes.js","../src/trix/config/toolbar.js","../src/trix/config/undo.js","../src/trix/config/css.js","../src/trix/core/basic_object.js","../src/trix/core/utilities/utf16_string.js","../src/trix/core/object.js","../src/trix/core/helpers/arrays.js","../src/trix/core/helpers/bidi.js","../src/trix/core/helpers/config.js","../src/trix/core/helpers/custom_elements.js","../src/trix/core/helpers/events.js","../src/trix/core/helpers/functions.js","../src/trix/core/helpers/objects.js","../src/trix/core/helpers/ranges.js","../src/trix/observers/selection_change_observer.js","../src/trix/core/helpers/strings.js","../src/trix/core/collections/hash.js","../src/trix/core/collections/object_group.js","../src/trix/core/collections/object_map.js","../src/trix/core/collections/element_store.js","../src/trix/core/utilities/operation.js","../src/trix/views/object_view.js","../src/trix/views/attachment_view.js","../src/trix/views/previewable_attachment_view.js","../src/trix/views/piece_view.js","../src/trix/views/text_view.js","../src/trix/views/block_view.js","../src/trix/views/document_view.js","../src/trix/models/piece.js","../src/trix/operations/image_preload_operation.js","../src/trix/models/attachment.js","../src/trix/models/attachment_piece.js","../src/trix/models/string_piece.js","../src/trix/models/splittable_list.js","../src/trix/models/text.js","../src/trix/models/block.js","../src/trix/models/document.js","../src/trix/models/html_sanitizer.js","../src/trix/models/html_parser.js","../src/trix/core/serialization.js","../src/trix/models/managed_attachment.js","../src/trix/models/attachment_manager.js","../src/trix/models/line_break_insertion.js","../src/trix/models/composition.js","../src/trix/models/undo_manager.js","../src/trix/filters/filter.js","../src/trix/filters/attachment_gallery_filter.js","../src/trix/models/editor.js","../src/trix/models/location_mapper.js","../src/trix/models/point_mapper.js","../src/trix/models/selection_manager.js","../src/trix/controllers/attachment_editor_controller.js","../src/trix/controllers/composition_controller.js","../src/trix/controllers/controller.js","../src/trix/observers/mutation_observer.js","../src/trix/operations/file_verification_operation.js","../src/trix/controllers/input_controller.js","../src/trix/controllers/level_0_input_controller.js","../src/trix/controllers/level_2_input_controller.js","../src/trix/controllers/toolbar_controller.js","../src/trix/controllers/editor_controller.js","../src/trix/elements/trix_toolbar_element.js","../src/trix/elements/trix_editor_element.js","../src/trix/trix.js"],"sourcesContent":["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n","const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n","export default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: (function() {\n    if (typeof InputEvent === \"undefined\") {\n      return false\n    }\n    for (const property of [ \"data\", \"getTargetRanges\", \"inputType\" ]) {\n      if (!(property in InputEvent.prototype)) {\n        return false\n      }\n    }\n    return true\n  })(),\n}\n","export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n","/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n","export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n","export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n","import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n","import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n","export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n","import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n","import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n","const undo = { interval: 5000 }\nexport default undo\n","export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n","export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n","import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(input.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      input.value = string\n      return new FormData(form).get(input.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n","import * as config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n","/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    return element.getAttribute(\"content\")\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n","const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n","export const defer = (fn) => setTimeout(fn, 1)\n","/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n","import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.run = this.run.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      if (\"onselectionchange\" in document) {\n        return document.addEventListener(\"selectionchange\", this.update, true)\n      } else {\n        return this.run()\n      }\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((s) => s !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    const domRange = getDOMRange()\n    if (!domRangesAreEqual(domRange, this.domRange)) {\n      this.domRange = domRange\n      return this.notifySelectionManagersOfSelectionChange()\n    }\n  }\n\n  reset() {\n    this.domRange = null\n    return this.update()\n  }\n\n  // Private\n\n  run() {\n    if (this.started) {\n      this.update()\n      return requestAnimationFrame(this.run)\n    }\n  }\n}\n\nconst domRangesAreEqual = (left, right) =>\n  left?.startContainer === right?.startContainer &&\n  left?.startOffset === right?.startOffset &&\n  left?.endContainer === right?.endContainer &&\n  left?.endOffset === right?.endOffset\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n","/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n","export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n","export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n","import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n","import * as config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      innerElement.innerHTML = this.attachment.getContent()\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  div.innerHTML = html || \"\"\n  return div.querySelector(tagName)\n}\n","import * as config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n","/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n","/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n","import * as config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    let attributes, className\n    const attributeName = this.attributes[depth]\n\n    const { tagName } = getBlockConfig(attributeName)\n    if (depth === 0 && this.block.isRTL()) {\n      attributes = { dir: \"rtl\" }\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n","import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n","import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n","import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n","import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice([ attribute ]))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n","import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n","/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes)\n  }\n\n  constructor(text, attributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n","import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray()).map((block) => JSON.parse(block.text.toConsole()))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    return this.normalizeListElementNesting()\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n","/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}) => {\n  const text = []\n  return { text, attributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      const html = HTMLSanitizer.sanitize(this.html).getHTML()\n      this.containerElement.innerHTML = html\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (element.parentNode.firstChild !== element) {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n          break\n        case \"td\":\n          if (element.parentNode.firstChild !== element) {\n            return this.appendStringWithAttributes(\" | \")\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n","/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n","import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n","import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n","export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n","import * as config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n","const BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nexport default class Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n","import Filter from \"./filter\"\n\nexport const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\n","import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n","/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n","/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n","/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n","import { removeNode } from \"trix/core/helpers\"\n\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n","import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n","/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n","import * as config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n","import { getAllAttributeNames, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\n\nimport { dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n      if (handler) {\n        this.withEvent(event, handler)\n        return this.scheduleRender()\n      }\n    },\n\n    input(event) {\n      return selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        return this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransfer.files?.length) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      return this.insertString(this.event.dataTransfer.getData(\"text/plain\"), { updatePosition: false })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"Files\") && clipboard.types.length === 1 && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-trix-validate\", \"\")\n      input.classList.add(\"trix-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport * as config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName) {\n    return this.invokeAction(actionName)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setInputElementValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n","import * as config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n","import * as config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty:not(:focus)::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nexport default class TrixEditorElement extends HTMLElement {\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    const labels = []\n    if (this.id && this.ownerDocument) {\n      labels.push(...Array.from(this.ownerDocument.querySelectorAll(`label[for='${this.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setInputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n      ensureAriaLabel(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.registerResetListener()\n      this.registerClickListener()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.unregisterResetListener()\n    return this.unregisterClickListener()\n  }\n\n  // Form support\n\n  registerResetListener() {\n    this.resetListener = this.resetBubbled.bind(this)\n    return window.addEventListener(\"reset\", this.resetListener, false)\n  }\n\n  unregisterResetListener() {\n    return window.removeEventListener(\"reset\", this.resetListener, false)\n  }\n\n  registerClickListener() {\n    this.clickListener = this.clickBubbled.bind(this)\n    return window.addEventListener(\"click\", this.clickListener, false)\n  }\n\n  unregisterClickListener() {\n    return window.removeEventListener(\"click\", this.clickListener, false)\n  }\n\n  resetBubbled(event) {\n    if (event.defaultPrevented) return\n    if (event.target !== this.form) return\n    return this.reset()\n  }\n\n  clickBubbled(event) {\n    if (event.defaultPrevented) return\n    if (this.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    return this.focus()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n","import { version } from \"../../package.json\"\n\nimport * as config from \"trix/config\"\nimport * as core from \"trix/core\"\nimport * as models from \"trix/models\"\nimport * as views from \"trix/views\"\nimport * as controllers from \"trix/controllers\"\nimport * as observers from \"trix/observers\"\nimport * as operations from \"trix/operations\"\nimport * as elements from \"trix/elements\"\nimport * as filters from \"trix/filters\"\n\nlet started = false\n\nfunction start() {\n  if (!started) {\n    customElements.define(\"trix-toolbar\", elements.TrixToolbarElement)\n    customElements.define(\"trix-editor\", elements.TrixEditorElement)\n    started = true\n  }\n}\n\nconst Trix = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  operations,\n  elements,\n  filters,\n  start\n}\n\nwindow.Trix = Trix\n\nexport default Trix\n"],"names":["attachments","preview","presentation","caption","name","size","file","attributes","default","tagName","parse","quote","nestable","heading1","terminal","breakOnReturn","group","code","text","plaintext","bulletList","bullet","listAttribute","test","element","parentNode","this","numberList","number","attachmentGallery","exclusive","_element$tagName","toLowerCase","browser$1","composesExistingText","navigator","userAgent","forcesObjectResizing","supportsInputEvents","InputEvent","property","prototype","lang$1","attachFiles","bold","bullets","byte","bytes","captionPlaceholder","indent","italic","link","numbers","outdent","redo","remove","strike","undo","unlink","url","urlPlaceholder","GB","KB","MB","PB","TB","sizes","lang","file_size_formatting","prefix","precision","formatter","base","exp","Math","floor","log","withoutInsignificantZeros","pow","toFixed","replace","concat","extend","properties","key","value","html","document","documentElement","match","matches","handleEvent","eventName","onElement","matchingSelector","withCallback","inPhase","preventDefault","times","selector","useCapture","handler","event","destroy","target","findClosestElementFromNode","call","removeEventListener","addEventListener","triggerEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","elementMatchesSelector","nodeType","node","untilNode","Node","ELEMENT_NODE","closest","innerElementIsActive","activeElement","elementContainsNode","findChildIndexOfNode","_node","childIndex","previousSibling","removeNode","_node$parentNode","removeChild","walkTree","tree","onlyNodesOfType","usingFilter","expandEntityReferences","whatToShow","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","SHOW_COMMENT","SHOW_ALL","createTreeWalker","makeElement","tag","options","createElement","editable","contenteditable","setAttribute","style","data","dataset","className","split","forEach","classList","add","textContent","childNodes","childNode","appendChild","blockTagNames","getBlockTagNames","blockAttributes","push","nodeIsBlockContainer","nodeIsBlockStartComment","firstChild","nodeProbablyIsBlockContainer","includes","nodeIsBlockStart","strict","arguments","length","undefined","nodeIsCommentNode","COMMENT_NODE","nodeIsCursorTarget","nodeIsTextNode","trixCursorTarget","nodeIsAttachmentElement","nodeIsEmptyTextNode","TEXT_NODE","input","level2Enabled","getLevel","browser","pickFiles","callback","type","multiple","hidden","id","fileInputId","files","getElementById","body","click","text_attributes","inheritable","parser","window","getComputedStyle","fontWeight","fontStyle","href","groupTagName","attachmentSelector","getAttribute","frozen","backgroundColor","toolbar","getDefaultHTML","interval","attachment","attachmentCaption","attachmentCaptionEditor","attachmentMetadata","attachmentMetadataContainer","attachmentName","attachmentProgress","attachmentSize","attachmentToolbar","BasicObject","proxyMethod","expression","toMethod","toProperty","optional","parseProxyMethodExpression","subject","object","_this$toMethod","_object","apply","proxyMethodExpressionPattern","Error","args","Function","RegExp","UTF16String","static","fromUCS2String","toString","ucs2String","ucs2decode","fromCodepoints","codepoints","ucs2encode","constructor","super","ucs2Length","offsetToUCS2Offset","offset","slice","max","offsetFromUCS2Offset","ucs2Offset","charAt","isEqualTo","box","toJSON","getCacheKey","hasArrayFrom","Array","from","_Array$from","hasStringCodePointAt","_$codePointAt","codePointAt","hasStringFromCodePoint","String","_String$fromCodePoint","fromCodePoint","string","map","char","output","counter","charCodeAt","extra","array","result","fromCharCode","join","TrixObject","fromJSONString","jsonString","fromJSON","JSON","hasSameConstructorAs","inspect","parts","contents","contentsForInspection","toJSONString","stringify","toUTF16String","arraysAreEqual","a","b","index","spliceArray","_len","_key","splice","RTL_PATTERN","getDirection","dir","dirName","form","supportsDirName","FormData","has","error","supportsDirSelector","get","trim","allAttributeNames","blockAttributeNames","textAttributeNames","listAttributeNames","getAllAttributeNames","getTextAttributeNames","getBlockAttributeNames","getBlockConfig","attributeName","config","Object","keys","getTextConfig","installDefaultCSSForTagName","defaultCSS","insertStyleElementForTagName","nonce","getCSPNonce","head","insertBefore","getMetaElement","querySelector","testTransferData","dataTransferIsPlainText","dataTransfer","getData","DOMParser","parseFromString","keyEventIsKeyboardCommand","platform","metaKey","ctrlKey","defer","fn","setTimeout","copyObject","objectsAreEqual","normalizeRange","range","isArray","copyValue","rangeIsCollapsed","start","end","rangeValuesAreEqual","rangesAreEqual","leftRange","rightRange","leftStart","leftEnd","rightStart","rightEnd","left","right","SelectionChangeObserver","update","bind","run","selectionManagers","started","stop","registerSelectionManager","selectionManager","unregisterSelectionManager","filter","s","notifySelectionManagersOfSelectionChange","selectionDidChange","domRange","getDOMRange","domRangesAreEqual","reset","requestAnimationFrame","startContainer","startOffset","endContainer","endOffset","selectionChangeObserver","getDOMSelection","selection","getSelection","rangeCount","_getDOMSelection","getRangeAt","domRangeIsPrivate","setDOMRange","removeAllRanges","addRange","nodeIsPrivate","getPrototypeOf","normalizeSpaces","NON_BREAKING_SPACE","breakableWhitespacePattern","squishBreakableWhitespace","source","utf16StringDifferences","diffA","utf16StringDifference","utf16String","diffB","leftIndex","rightIndexA","rightIndexB","Hash","objects","hash","getKeys","getKeysCommonToHash","values","copy","merge","unbox","toArray","isEmpty","toObject","keyToRemove","sort","ObjectGroup","ungroupedObjects","depth","asTree","_object$canBeGrouped2","_object$canBeGrouped","_group$canBeGroupedWi","_group","canBeGrouped","canBeGroupedWith","groupObjects","getObjects","getDepth","ObjectMap","find","ElementStore","elements","getKey","trixStoreKey","Operation","isPerforming","performing","hasPerformed","performed","hasSucceeded","succeeded","hasFailed","getPromise","promise","Promise","resolve","reject","perform","release","_this$promise","_this$promise$cancel","cancel","ObjectView","childViews","rootView","getNodes","nodes","createNodes","cloneNode","invalidate","_this$parentView","parentView","invalidateViewForObject","_this$findViewForObje","findViewForObject","findOrCreateCachedChildView","viewClass","view","getCachedViewForObject","recordChildView","createChildView","cacheViewForObject","ObjectGroupView","getAllChildViews","views","childView","findElement","findElementForObject","getViewCache","isViewCachingEnabled","viewCache","shouldCacheViews","enableViewCaching","disableViewCaching","_this$getViewCache","cache","garbageCollectCachedViews","objectKeys","objectGroup","getChildViews","createContainerElement","css","AttachmentView","uploadProgressDelegate","attachmentPiece","piece","createContentNodes","innerElement","figure","getClassName","getHref","tabindex","hasContent","innerHTML","getContent","createCaptionElement","isPending","progressElement","class","getUploadProgress","trixMutable","createCursorTarget","figcaption","getCaption","captionConfig","getCaptionConfig","getFilename","getFormattedFilesize","nameElement","createTextNode","sizeElement","names","getType","extension","getExtension","trixAttachment","trixContentType","getContentType","trixId","trixAttributes","trixSerialize","htmlContainsTagName","_config$attachments$t","findProgressElement","_this$findElement","attachmentDidChangeUploadProgress","div","PreviewableAttachmentView","previewDelegate","image","src","refresh","updateAttributesForImage","getURL","previewURL","getPreviewURL","removeAttribute","serializedAttributes","width","getWidth","height","getHeight","storeKey","attachmentDidChangeAttributes","PieceView","getAttributes","textConfig","context","createAttachmentNodes","createStringNodes","_element","firstElementChild","findInnerElement","isPreviewable","_this$textConfig","iterable","substring","preserveSpaces","styles","pendingElement","styleProperty","isLast","isFirst","followsWhitespace","TextView","pieces","getPieces","lastIndex","endsWithWhitespace","previousPiece","hasAttribute","BlockView","block","createComment","_getBlockConfig","getLastAttribute","textView","shouldAddExtraNewlineElement","isRTL","getBlockBreakPosition","DocumentView","render","sync","elementStore","setDocument","shadowElement","getBlocks","isSynced","elementsHaveEqualHTML","fragment","createDocumentFragmentForSync","lastChild","didSync","findStoredElements","createDocumentFragment","storedElement","replaceChild","querySelectorAll","otherElement","ignoreSpaces","Piece","types","pieceJSON","copyWithAttributes","getValue","copyWithAdditionalAttributes","copyWithoutAttribute","attribute","getAttributesHash","hasSameStringValueAsPiece","hasSameAttributesAsPiece","isBlockBreak","isSerializable","getLength","canBeConsolidatedWith","ImagePreloadOperation","Image","onload","naturalWidth","naturalHeight","onerror","Attachment","attachmentForFile","attributesForFile","setFile","filename","filesize","contentType","attachmentJSON","releaseFile","didChangeAttributes","setAttributes","newAttributes","_this$previewDelegate","_this$previewDelegate2","_this$delegate","_this$delegate$attach","delegate","preloadURL","previewablePattern","getFilesize","_this$getFilename$mat","getFile","preloadFile","releasePreloadedFile","uploadProgress","setUploadProgress","_this$uploadProgressD","_this$uploadProgressD2","preloadingURL","setPreviewURL","_this$previewDelegate3","_this$previewDelegate4","_this$delegate2","_this$delegate2$attac","attachmentDidChangePreviewURL","preload","fileObjectURL","URL","createObjectURL","revokeObjectURL","then","_ref","catch","AttachmentPiece","ensureAttachmentExclusivelyHasAttribute","removeProhibitedAttributes","permittedAttributes","_piece$attachment","json","toConsole","registerType","StringPiece","normalizeNewlines","consolidateWith","splitAtOffset","SplittableList","indexOf","eachObject","insertObjectAtIndex","insertSplittableListAtIndex","splittableList","insertSplittableListAtPosition","position","splitObjectAtPosition","editObjectAtIndex","replaceObjectAtIndex","removeObjectAtIndex","getObjectAtIndex","getSplittableListInRange","rightIndex","splitObjectsAtRange","selectSplittableList","removeObjectsInRange","transformObjectsInRange","transform","transformedObjects","rightOuterIndex","leftInnerIndex","startOfRange","endOfRange","getObjectAtPosition","findIndexAndOffsetAtPosition","splitIndex","splitOffset","leftObject","rightObject","consolidate","pendingObject","_pendingObject$canBeC","_pendingObject","consolidateFromIndexToIndex","startIndex","endIndex","objectsInRange","consolidatedInRange","currentPosition","nextPosition","findPositionAtIndexAndOffset","currentIndex","getEndPosition","endPosition","objectArraysAreEqual","Text","textJSON","notEmpty","pieceList","copyWithPieceList","copyUsingObjectMap","objectMap","appendText","insertTextAtPosition","removeTextAtRange","replaceTextAtRange","moveTextFromRangeToPosition","getTextAtRange","addAttributeAtRange","addAttributesAtRange","removeAttributeAtRange","setAttributesAtRange","getAttributesAtPosition","_this$pieceList$getOb","getCommonAttributes","fromCommonAttributesOfObjects","getCommonAttributesAtRange","getExpandedRangeForAttributeAtOffset","getStringAtRange","getStringAtPosition","startsWithString","endsWithString","getAttachmentPieces","getAttachments","getAttachmentAndPositionById","attachmentId","getAttachmentById","getRangeOfAttachment","attachmentAndPosition","updateAttributesForAttachment","_text$pieceList","eachPiece","getPieceAtPosition","toSerializableText","Block","blockJSON","applyBlockBreakToText","copyWithText","copyWithoutText","copyWithoutAttributes","mappedText","addAttribute","expandAttribute","removeLastValue","removeLastAttribute","getLastElement","getAttributeLevel","getAttributeAtLevel","level","hasAttributes","getLastNestableAttribute","getNestableAttributes","getNestingLevel","decreaseNestingLevel","increaseNestingLevel","lastIndexOf","getListItemAttributes","isListItem","isTerminalBlock","_getBlockConfig2","breaksOnReturn","_getBlockConfig3","findLineBreakInDirectionFromPosition","direction","newlineText","textForStringWithAttributes","getTextWithoutBlockBreak","textEndsInBlockBreak","otherBlock","otherAttributes","otherAttribute","getListAttributeNames","unmarkExistingInnerBlockBreaksInText","addBlockBreakToText","modified","innerPieces","lastPiece","unmarkBlockBreakPiece","blockBreakText","blockBreak","endText","Document","documentJSON","textAttributes","blocks","blockList","getBlockAtIndex","consolidateBlocks","copyUsingObjectsFromDocument","sourceDocument","copyWithBaseBlockAttributes","replaceBlock","oldBlock","newBlock","insertDocumentAtRange","locationFromPosition","getBlockAtPosition","mergeDocumentAtRange","formattedDocument","startPosition","startLocation","baseBlockAttributes","getBaseBlockAttributes","trailingBlockAttributes","leadingBlockAttributes","blockCount","getBlockCount","firstBlock","firstText","insertTextAtRange","leftPosition","rightPosition","leftLocation","rightLocation","locationRangeFromRange","leftOffset","leftBlock","rightOffset","rightBlock","leftText","rightText","affectedBlockCount","getDocumentAtRange","movingRightward","eachBlockAtRange","textRange","eachBlock","getTextAtIndex","removeAttributeForAttachment","insertBlockBreakAtRange","applyBlockAttributeAtRange","expanded","expandRangeToLineBreaksAndSplitBlocks","blockConfig","removeLastListAttributeAtRange","exceptAttributeName","converted","convertLineBreaksToBlockBreaksInRange","removeBlockAttributesAtRange","removeLastTerminalAttributeAtRange","consolidateBlocksAtRange","lastAttributeName","endLocation","startBlock","positionFromLocation","endBlock","_this$getBlockAtIndex","getTextAtPosition","getCharacterAtPosition","getEditCount","editCount","getCommonAttributesAtPosition","attributesForBlock","commonAttributes","attributesLeft","inheritableAttributes","getRangeOfCommonAttributeAtPosition","blockIndex","lastAttributeIndex","min","attachmentPieces","getLocationRangeOfAttachment","getAttachmentPieceForAttachment","findRangesForBlockAttribute","ranges","findRangesForTextAttribute","withValue","location","locationRangeFromPosition","rangeFromLocationRange","locationRange","getTexts","toSerializableDocument","DEFAULT_ALLOWED_ATTRIBUTES","DEFAULT_FORBIDDEN_PROTOCOLS","DEFAULT_FORBIDDEN_ELEMENTS","HTMLSanitizer","sanitizer","sanitize","allowedAttributes","forbiddenProtocols","forbiddenElements","createBodyElementForHTML","sanitizeElements","normalizeListElementNesting","getHTML","getBody","walker","nodesToRemove","nextNode","currentNode","elementIsRemovable","sanitizeElement","protocol","listElement","previousElement","previousElementSibling","elementIsForbidden","elementIsntSerializable","doc","implementation","createHTMLDocument","pieceForString","parseTrixDataAttribute","HTMLParser","referenceElement","blockElements","processedElements","getDocument","createHiddenContainer","containerElement","nodeFilter","processNode","translateBlockElementMarginsToNewlines","removeHiddenContainer","display","nextSibling","isInsignificantTextNode","appendBlockForTextNode","processTextNode","appendBlockForElement","processElement","currentBlockElement","isBlockElement","appendStringWithAttributes","_this$currentBlock","getBlockAttributes","currentBlock","appendBlockForAttributesWithElement","elementIsBlockElement","currentBlockContainsElement","parentBlockElement","findParentBlockElement","appendEmptyBlock","parentElement","_node$previousSibling","elementCanDisplayPreformattedText","stringEndsWithWhitespace","leftTrimBreakableWhitespace","getTextAttributes","appendAttachmentWithAttributes","isExtraBR","dimensions","parseInt","getImageDimensions","blockForAttributes","appendPiece","pieceForAttachment","appendStringToTextAtIndex","prependStringToTextAtIndex","unshift","configAttr","attributeInheritedFromBlock","blockElement","findBlockElementAncestors","attrConfig","_attrConfig$test","reverse","ancestors","stringIsAllBreakableWhitespace","nodeEndsWithNonWhitespace","defaultMargin","getMarginOfDefaultBlockElement","margin","getMarginOfBlockElementAtIndex","top","bottom","getBlockElementMargin","whiteSpace","marginTop","marginBottom","FILTER_REJECT","FILTER_ACCEPT","unserializableAttributeNames","serializedAttributesSelector","serializedAttributesAttribute","blockCommentPattern","serializers","serializable","HTMLElement","el","ManagedAttachment","attachmentManager","requestRemovalOfAttachment","AttachmentManager","managedAttachments","manageAttachment","attachmentIsManaged","attachmentManagerDidRequestRemovalOfAttachment","unmanageAttachment","managedAttachment","LineBreakInsertion","composition","selectedRange","getSelectedRange","previousCharacter","nextCharacter","shouldInsertBlockBreak","shouldBreakFormattedBlock","shouldDecreaseListLevel","shouldPrependListItem","shouldRemoveLastBlockAttribute","Composition","currentAttributes","revision","_this$delegate$compos","refreshAttachments","compositionDidChangeDocument","getSnapshot","loadSnapshot","_this$delegate2$compo","_this$delegate3","_this$delegate3$compo","compositionWillLoadSnapshot","setSelection","compositionDidLoadSnapshot","insertText","updatePosition","notifyDelegateOfInsertionAtRange","insertBlock","insertDocument","insertString","getCurrentTextAttributes","insertBlockBreak","insertLineBreak","insertion","decreaseListLevel","removeLastBlockAttribute","breakFormattedBlock","insertHTML","replaceHTML","getLocationRange","insertFile","insertFiles","_this$delegate4","compositionShouldAcceptFile","insertAttachments","insertAttachment","attachmentText","textForAttachmentWithAttributes","shouldManageDeletingInDirection","shouldManageMovingCursorInDirection","deleteInDirection","deletingIntoPreviousBlock","selectionSpansBlocks","selectionIsCollapsed","canDecreaseBlockAttributeLevel","getBlock","decreaseBlockAttributeLevel","getExpandedRangeInDirection","getAttachmentAtRange","editAttachment","moveTextFromRange","removeAttachment","stopEditingAttachment","removeCurrentAttribute","insertPlaceholder","placeholderPosition","getPosition","selectPlaceholder","setSelectedRange","forgetPlaceholder","hasCurrentAttribute","toggleCurrentAttribute","setCurrentAttribute","canSetCurrentAttribute","canSetCurrentBlockAttribute","canSetCurrentTextAttribute","getSelectedDocument","setBlockAttribute","setTextAttribute","notifyDelegateOfCurrentAttributesChange","removeBlockAttribute","updateCurrentAttributes","removeTextAttribute","canDecreaseNestingLevel","_this$getBlock","canIncreaseNestingLevel","previousBlock","getPreviousBlock","arrayStartsWith","_this$getBlock2","_this$getBlock3","attributeLevel","ignoreLock","getCurrentAttributes","freezeSelection","thawSelection","hasFrozenSelection","_this$delegate5","compositionDidRequestChangingSelectionToLocationRange","getSelectionManager","setLocationRange","targetLocationRange","withTargetLocationRange","withTargetRange","withTargetDOMRange","createLocationRangeFromDOMRange","translateUTF16PositionFromOffset","editingAttachment","moveCursorInDirection","canEditAttachment","expandSelectionInDirection","expandSelectionForEditing","expandSelectionAroundCommonAttribute","selectionContainsAttachments","_this$getSelectedAtta","getSelectedAttachments","selectionIsInCursorTarget","positionIsCursorTarget","locationIsCursorTarget","positionIsBlockBreak","_this$document$getPie","_this$getSelectedDocu","added","removed","oldArray","newArray","existingValues","Set","currentValues","summarizeArrayChange","_this$delegate6","_this$delegate6$compo","compositionDidRemoveAttachment","_this$delegate7","_this$delegate7$compo","compositionDidAddAttachment","_this$delegate8","_this$delegate8$compo","compositionDidEditAttachment","_this$delegate9","_this$delegate9$compo","compositionDidChangeAttachmentPreviewURL","_this$delegate10","_this$delegate10$comp","compositionDidStartEditingAttachment","_this$delegate11","_this$delegate11$comp","compositionDidStopEditingAttachment","newDocument","OBJECT_REPLACEMENT_CHARACTER","_this$delegate12","_this$delegate12$comp","compositionDidChangeCurrentAttributes","_this$delegate13","_this$delegate13$comp","compositionDidPerformInsertionAtRange","utf16string","utf16position","UndoManager","undoEntries","redoEntries","recordUndoEntry","description","consolidatable","previousEntry","entryHasDescriptionAndContext","undoEntry","createEntry","pop","redoEntry","snapshot","canUndo","canRedo","entry","Filter","applyBlockAttribute","findRangesOfBlocks","findRangesOfPieces","moveSelectedRangeForward","attachmentGalleryFilter","DEFAULT_FILTERS","Editor","undoManager","filters","loadDocument","loadHTML","loadJSON","getClientRectAtPosition","getClientRectAtLocationRange","activateAttribute","attributeIsActive","canActivateAttribute","deactivateAttribute","LocationMapper","findLocationFromContainerAndOffset","container","foundBlock","attachmentElement","findAttachmentElementParentForNode","rejectAttachmentContents","nodeLength","findContainerAndOffsetFromLocation","nodeOffset","findNodeAndOffsetFromLocation","getSignificantNodesForIndex","acceptSignificantNodes","recordingNodes","rejectEmptyTextNodes","PointMapper","createDOMRangeFromPoint","x","y","caretPositionFromPoint","offsetNode","createRange","setStart","caretRangeFromPoint","createTextRange","originalDOMRange","moveToPoint","select","getClientRectsForDOMRange","getClientRects","SelectionManager","didMouseDown","locationMapper","pointMapper","lockCount","currentLocationRange","lockedLocationRange","createDOMRangeFromLocationRange","updateCurrentLocationRange","setLocationRangeFromPointRange","pointRange","getLocationAtPoint","lock","unlock","clearSelection","_getDOMRange","collapsed","selectionIsExpanded","domRangeWithinElement","pauseTemporarily","resumeHandlers","paused","resume","clearTimeout","resumeTimeout","_this$delegate$locati","locationRangeDidChange","rangeStart","rangeEnd","setEnd","point","_this$createLocationR","keyNames","undoable","commands","do","undos","AttachmentEditorController","title","trixAction","didClickToolbar","didClickActionButton","textarea","placeholder","textareaClone","tabIndex","autoresize","scrollHeight","didInputCaption","didKeyDownCaption","didChangeCaption","didBlurCaption","editingFigcaption","editCaption","focus","install","makeElementMutable","addToolbar","installCaptionEditor","uninstall","savePendingCaption","didUninstallAttachmentEditor","pendingCaption","_this$delegate3$attac","attachmentEditorDidRequestUpdatingAttributesForAttachment","attachmentEditorDidRequestRemovingAttributeForAttachment","stopPropagation","attachmentEditorDidRequestRemovalOfAttachment","_this$delegate5$attac","keyCode","attachmentEditorDidRequestDeselectingAttachment","CompositionController","didFocus","didBlur","didClickAttachment","documentView","_this$blurPromise","focused","compositionControllerDidFocus","blurPromise","compositionControllerDidBlur","findAttachmentForElement","compositionControllerDidSelectAttachment","getSerializableElement","isEditingAttachment","_this$delegate4$compo","_this$delegate5$compo","canSyncDocumentView","compositionControllerWillSyncDocumentView","compositionControllerDidSyncDocumentView","compositionControllerDidRender","rerenderViewForObject","refreshViewCache","attachmentEditor","installAttachmentEditorForAttachment","_this$attachmentEdito","uninstallAttachmentEditor","_this$attachmentEdito2","compositionControllerWillUpdateAttachment","compositionControllerDidRequestRemovalOfAttachment","compositionControllerDidRequestDeselectingAttachment","Controller","mutableSelector","mutableAttributeName","childList","characterData","characterDataOldValue","subtree","MutationObserver","didMutate","observer","observe","disconnect","mutations","_this$delegate$elemen","findSignificantMutations","elementDidMutate","getMutationSummary","mutation","mutationIsSignificant","nodeIsMutable","nodesModifiedByMutation","nodeIsSignificant","addedNodes","removedNodes","getTextMutationSummary","additions","deletions","getTextChangesFromCharacterData","textChanges","getTextChangesFromChildList","addition","summary","textAdded","deleted","textDeleted","getMutationsByType","textRemoved","getTextForNodes","characterMutations","startMutation","endMutation","summarized","oldString","newString","summarizeStringChange","oldValue","FileVerificationOperation","reader","FileReader","abort","readAsArrayBuffer","InputController","mutationObserver","events","handlerFor","mutationSummary","editorWillSyncDocumentView","editorDidSyncDocumentView","requestRender","_this$delegate$inputC","inputControllerDidRequestRender","requestReparse","_this$delegate2$input","inputControllerDidRequestReparse","operations","all","handleInput","_this$responder","inputControllerWillAttachFiles","responder","defaultPrevented","inputControllerWillHandleInput","inputControllerDidHandleInput","createLinkHTML","outerHTML","pastedFileCount","Level0InputController","resetInputSummary","setInputSummary","inputSummary","isComposing","inputControllerDidAllowUnhandledInput","mutationIsExpected","preferDocument","mutationAdditionMatchesSummary","mutationDeletionMatchesSummary","didDelete","unexpectedNewlineAddition","unexpectedNewlineDeletion","_this$compositionInpu","textChanged","composedEmptyString","getEndData","compositionInput","getCompositionInput","CompositionInput","isEnded","_this$responder2","serializeSelectionToDataTransfer","_this$responder3","setData","dataTransferIsWritable","canAcceptDataTransfer","Files","getPastedHTMLUsingHiddenElement","pageXOffset","pageYOffset","opacity","keydown","didInput","keyName","_context2","modifier","_context","character","inputControllerDidReceiveKeyboardCommand","keypress","altKey","stringFromKeyEvent","_this$responder9","inputControllerWillPerformTyping","textInput","toUpperCase","_this$responder10","dragenter","dragstart","_this$delegate5$input","draggedRange","inputControllerDidStartDrag","dragover","draggingPoint","clientX","clientY","_this$delegate6$input","inputControllerDidReceiveDragOverPoint","dragend","_this$delegate7$input","inputControllerDidCancelDrag","drop","_event$dataTransfer","_this$responder11","_this$responder12","inputControllerWillMoveText","_this$responder13","cut","_this$responder14","clipboardData","inputControllerWillCutText","_this$responder15","paste","clipboard","testClipboardData","pasteEventIsCrippledSafariHTMLPaste","_this$responder16","inputControllerWillPaste","inputControllerDidPaste","_this$responder17","_this$delegate14","_this$responder18","_this$delegate15","_this$delegate16","_this$responder19","_this$delegate17","_clipboard$items","_clipboard$items$","_clipboard$items$$get","items","getAsFile","_this$delegate18","_this$responder20","_this$delegate19","extensionForFile","compositionstart","compositionupdate","compositionend","beforeinput","backspace","_this$delegate20","delete","_this$delegate21","return","_this$delegate22","_this$responder21","tab","_this$responder22","_this$responder23","_this$responder24","_this$responder25","control","d","_this$delegate23","h","_this$delegate24","o","_this$delegate25","_this$responder26","shift","_this$delegate26","_this$responder27","_this$responder28","_this$responder29","alt","_this$delegate27","meta","_this$delegate28","_file$type","_file$type$match","which","charCode","hasPasteboardFlavor","hasReadableDynamicData","isExternalHTMLPaste","isExternalRichTextPaste","inputController","isSignificant","_this$responder5","_this$responder4","canApplyToDocument","_this$responder6","_this$responder7","_this$responder8","_this$data$start","_this$data$end","Level2InputController","scheduledRender","composing","reparse","scheduleRender","_this$afterRender","cancelAnimationFrame","afterRender","toggleAttributeIfSupported","inputControllerWillPerformFormatting","activateAttributeIfSupported","getTargetDOMRange","minLength","_this$event$getTarget","_this$event","targetRanges","getTargetRanges","staticRangeToRange","withEvent","command","keyboardCommandFromKeyEvent","shiftKey","_event$clipboardData","pasteEventHasFilesOnly","pasteEventHasPlainTextOnly","inputTypes","inputType","dragging","pointFromEvent","dragEventHasFiles","ArrowLeft","ArrowRight","Backspace","Tab","deleteByComposition","deleteByCut","deleteByDrag","deleteByDragRange","deleteCompositionText","deleteContent","deleteContentBackward","deleteContentForward","deleteEntireSoftLine","deleteHardLineBackward","deleteHardLineForward","deleteSoftLineBackward","deleteSoftLineForward","deleteWordBackward","deleteWordForward","formatBackColor","formatBold","formatFontColor","formatFontName","formatIndent","formatItalic","formatJustifyCenter","formatJustifyFull","formatJustifyLeft","formatJustifyRight","formatOutdent","formatRemove","_this$responder30","formatSetBlockTextDirection","formatSetInlineTextDirection","formatStrikeThrough","formatSubscript","formatSuperscript","formatUnderline","historyRedo","inputControllerWillPerformRedo","historyUndo","inputControllerWillPerformUndo","insertCompositionText","insertFromComposition","insertFromDrop","_this$responder31","insertFromPaste","_dataTransfer$files","_this$responder32","_this$responder33","_this$responder34","_this$responder35","insertFromYank","insertLink","insertOrderedList","insertParagraph","_this$responder36","insertReplacementText","_this$event$dataTrans","insertTranspose","insertUnorderedList","staticRange","toolbarButtonSelector","activeDialogSelector","dialogSelector","dialogButtonSelector","dialogInputSelector","getInputForDialog","getAttributeName","getActionName","ToolbarController","didClickAttributeButton","didClickDialogButton","didKeyDownDialogInput","actions","resetDialogInputs","toolbarDidClickButton","actionName","getDialog","toggleDialog","toolbarDidInvokeAction","toolbarDidToggleAttribute","refreshAttributeButtons","dialogElement","dialog","hideDialog","updateActions","refreshActionButtons","eachActionButton","disabled","updateAttributes","eachAttributeButton","dialogIsVisible","applyKeyboardCommand","keyString","button","buttonKeys","buttonKeyString","dialogName","showDialog","toolbarWillShowDialog","disabledInput","toolbarDidShowDialog","willValidate","checkValidity","toolbarDidUpdateAttribute","toolbarDidRemoveAttribute","toolbarDidHideDialog","getDialogName","EditorController","editorElement","compositionController","toolbarController","toolbarElement","editor","notifyEditorElement","handlingInput","updateCurrentActions","pasting","pastedRange","attachmentLocationRange","loadingSnapshot","isFocused","requestedLocationRange","compositionRevisionWhenLocationRangeRequested","renderedCompositionRevision","runEditorFilters","isFocusedInvisibly","requestedRender","recordTypingUndoEntry","recordFormattingUndoEntry","locationRangeBeforeDrag","invokeAction","selectionFrozen","canInvokeAction","actionIsExternal","_this$actions$actionN","_this$actions$actionN2","_this$actions$actionN3","_this$actions$actionN4","getCurrentActions","currentActions","updateInputElement","serializer","serializeToContentType","setInputElementValue","message","documentChangedSinceLastRender","notify","getUndoContext","getLocationContext","getTimeContext","Date","getTime","_this$editorElement$o","ownerDocument","TrixToolbarElement","connectedCallback","makeEditable","handleEventOnce","configureContentEditable","setDefaultParagraphSeparator","disableObjectResizing","_document$queryComman","_document","queryCommandSupported","execCommand","_document$queryComman2","_document2","cursorTargetStyles","TrixEditorElement","labels","label","_this$ownerDocument","toolbarId","_this$inputElement","inputElement","_this$ownerDocument2","inputId","nextElementSibling","_this$editorControlle","editorController","_this$inputElement2","_this$inputElement3","defaultValue","_this$editor","addAccessibilityRole","texts","contains","ensureAriaLabel","registerResetListener","registerClickListener","autofocus","disconnectedCallback","_this$editorControlle2","unregisterResetListener","unregisterClickListener","resetListener","resetBubbled","clickListener","clickBubbled","Trix","VERSION","core","models","controllers","observers","customElements","define"],"mappings":"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"}